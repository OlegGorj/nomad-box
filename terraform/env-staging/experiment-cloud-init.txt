#!/bin/bash
#

# This should be filled in by TF template using the Makefile ENV
NOMAD_BOX_VERSION_CONSUL=0.8.1
NOMAD_BOX_VERSION_NOMAD=0.5.6
NOMAD_BOX_VERSION_NOMAD_UI=0.13.4
NOMAD_BOX_VERSION_TRAEFIK=1.2.3
NOMAD_BOX_VERSION_VAULT=0.7.0
NOMAD_BOX_VERSION_VAULT_UI=2.0.1

# Get the basic packages (+ LXD + ZFS + OMS + Powershell? + hasicUI + VaultUI)
export DEBIAN_FRONTEND=noninteractive &&  apt-get update && apt-get upgrade -y && \ 
    apt-get install -y unzip dnsmasq sysstat docker.io lxd zfsutils-linux nodejs npm jq

# Should probably get jq as well :P Now that it is packaged; go for floomatic!!
npm install -g floomatic

# Consul operates in /opt
# ========================
mkdir -p /opt/consul
cd /opt/consul

# Get the binaries
wget "https://releases.hashicorp.com/consul/${NOMAD_BOX_VERSION_CONSUL}/consul_${NOMAD_BOX_VERSION_CONSUL}_linux_amd64.zip"
unzip consul_${NOMAD_BOX_VERSION_CONSUL}_linux_amd64.zip

# Setup needed folders and start service; to be replaced in systemd
mkdir ./consul.d

# Extract the IP address from the determined interface
CONSUL_CLIENT_INTERFACE="eth0"
CONSUL_CLIENT_ADDRESS=$(ip -o -4 addr list $CONSUL_CLIENT_INTERFACE | head -n1 | awk '{print $4}' | cut -d/ -f1)
# Use that address to setup the HTTP endpoint so that it is reachable from within Docker container
cat > ./consul.d/config.json <<EOF
{
    "addresses": {
        "http": "${CONSUL_CLIENT_ADDRESS}"
    }
}
EOF

# Extract the IP address from the determined interface
CONSUL_BIND_INTERFACE="eth0"
CONSUL_BIND_ADDRESS=$(ip -o -4 addr list $CONSUL_BIND_INTERFACE | head -n1 | awk '{print $4}' | cut -d/ -f1)

# Start up the Consul agent
/opt/consul/consul agent -data-dir=/tmp/consul -config-dir=./consul.d \
  -retry-join=10.10.1.4 -retry-join=10.10.2.4 -retry-join=10.10.3.4 \
  -bind=${CONSUL_BIND_ADDRESS} &

# Setup dnsmsq
# From: https://github.com/darron/kvexpress-demo/blob/c0bd1733f0ad78979a34242d5cfe9961b0c3cabd/ami-build/provision.sh#L42-L56
# From: https://www.consul.io/docs/guides/forwarding.html
# =======================================================
# create the needed folders
mkdir -p /var/log/dnsmasq/ && chmod 755 /var/log/dnsmasq

# Setup config file for dnsmasq
cat > /etc/dnsmasq.d/10-consul <<EOF
# Enable forward lookup of the 'consul' domain:
server=/consul/127.0.0.1#8600

# Uncomment and modify as appropriate to enable reverse DNS lookups for
# common netblocks found in RFC 1918, 5735, and 6598:
rev-server=10.0.0.0/8,127.0.0.1#8600

# Accept DNS queries only from hosts whose address is on a local subnet.
local-service

EOF

cat > /etc/default/dnsmasq <<EOF
DNSMASQ_OPTS="--log-facility=/var/log/dnsmasq/dnsmasq --local-ttl=10"
ENABLED=1
CONFIG_DIR=/etc/dnsmasq.d,.dpkg-dist,.dpkg-old,.dpkg-new
EOF

# Start the service ...
service dnsmasq restart


# Setup Nomad (must run as root) ..
# ====================================
# Nomad operates in /opt
mkdir -p /opt/nomad
cd /opt/nomad

# Get the binaries
wget "https://releases.hashicorp.com/nomad/${NOMAD_BOX_VERSION_NOMAD}/nomad_${NOMAD_BOX_VERSION_NOMAD}_linux_amd64.zip"
unzip nomad_${NOMAD_BOX_VERSION_NOMAD}_linux_amd64.zip

# Setup needed folders and start service; to be replaced in systemd
mkdir ./jobs

# Setup the pointing of consul to the agent running locally
cat > ./config.json <<EOF
{
    "consul": {
        "address": "${CONSUL_CLIENT_ADDRESS}:8500"
    },
    "addresses": {
        "http": "${CONSUL_CLIENT_ADDRESS}"
    }
}
EOF

# Run both as server and client; taking consul config from above ...
./nomad agent -client -servers=10.10.1.4,10.10.2.4,10.10.3.4 -data-dir=/tmp/nomad -config=./config.json &

# Run Nomad-UI
wget "https://github.com/jippi/hashi-ui/releases/download/v${NOMAD_BOX_VERSION_NOMAD_UI}/hashi-ui-linux-amd64"
chmod +x ./hashi-ui-linux-amd64
# With IP in template; can build as ./nomad-ui-linux-amd64 -web.listen-address "10.0.3.4:3000"
# ./hashi-ui-linux-amd64 &


# Setup Traefik (must run as root) ...
# =====================================
# Treafik operates in /opt
mkdir -p /opt/traefik
cd /opt/traefik
# For use by traefik logging
mkdir log

# Get the binaries
wget "https://github.com/containous/traefik/releases/download/v${NOMAD_BOX_VERSION_TRAEFIK}/traefik_linux-amd64"
chmod +x ./traefik_linux-amd64

# Setup traefik TOML config; bind interface only to internal private IP?
cat > ./traefik.toml <<EOF

traefikLogsFile = "log/traefik.log"
accessLogsFile = "log/access.log"

defaultEntryPoints = ["http"]

[entryPoints]
  [entryPoints.http]
  address = ":80"

[web]
address = "${CONSUL_CLIENT_ADDRESS}:8080"

[consulCatalog]
constraints = ["tag==lolcats"]
endpoint = "${CONSUL_CLIENT_ADDRESS}:8500"
domain = "service.consul"
prefix = "traefik"

EOF

# Run the traefik server; would be good to find out how to drop user permission
./traefik_linux-amd64 &

# Download all the rest to experiment with ... (ZFS, LXD, BCC, OMS, Powershell ..)
# Vault operates in /opt
mkdir -p /opt/vault
cd /opt/vault

# Get the binaries
wget "https://releases.hashicorp.com/vault/${NOMAD_BOX_VERSION_VAULT}/vault_${NOMAD_BOX_VERSION_VAULT}_linux_amd64.zip"
unzip vault_${NOMAD_BOX_VERSION_NOMAD}_linux_amd64.zip

# Get Vault-UI Source Code
wget "https://github.com/djenriquez/vault-ui/archive/${NOMAD_BOX_VERSION_VAULT_UI}.tar.gz"
tar xvfz ${NOMAD_BOX_VERSION_VAULT_UI}.tar.gz
# Folder will be ./vault-ui-${NOMAD_BOX_VERSION_VAULT_UI}
# With IP in template; can build as ./nomad-ui-linux-amd64 -web.listen-address "10.0.3.4:3000"
# ./vault-ui-linux-amd64 &

# Powershell: Run a Docker container in CLI as it is interactive
# http://discoposse.com/2017/01/19/running-powershell-core-using-docker/
docker pull microsoft/powershell

# BCC: Run a Docker container in CLI as it is interactive!!
docker pull zlim/bcc
# docker run -it --rm \
#  --privileged \
#  -v /lib/modules:/lib/modules:ro \
#  -v /usr/src:/usr/src:ro \
#  -v /etc/localtime:/etc/localtime:ro \
#  --workdir /usr/share/bcc/tools \
#  zlim/bcc

